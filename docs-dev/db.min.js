function loop(e){if(exec.results.length){let e=JSON.parse2(JSON.stringify2(exec.results.shift()));exec.dbHandler.outs.add(e).then(loop,function(){console.log("sdf")})}}importScripts("dependencies/mathjs/math.min.js"),importScripts("dependencies/augmented-json-serialization-functions.js"),importScripts("dependencies/dexie/dexie.min.js"),onmessage=function(e){if("object"==typeof e.data){let t=Object.keys(e.data);for(let s=0;s<t.length;s++)switch(t[s]){case"use":exec.setDB(e.data.use);break;case"put":exec.putData(e.data.put);break;case"results":exec.addResults(e.data.results)}}};const exec={dbHandler:null,results:[],dbName:"",setDB:function(e){this.dbName=e,this.dbHandler?(this.dbHandler.close(),this.dbHandler.delete().then(()=>{exec.createDB()})):this.createDB(e)},createDB:createDB=function(e){e||(e=this.dbName),this.dbHandler=new Dexie(e),this.dbHandler.version(1).stores({outs:"++k, t, b"})},putData:putData=function(e){this.dbHandler.outs.add(e)},delDbase:delDbase=function(){this.dbHandler.delete()},maxCount:101,wUDelFin:!1,removeAboveLimit:function(e){this.wUDelFin||(e>0&&(this.maxCount=e),this.dbHandler.outs.count().then(function(e){console.log(e);let t=e-exec.maxCount;console.log(t),t>0&&(exec.wUDelFin=!0,exec.dbHandler.outs.orderBy("t").limit(t).delete().then(e=>{exec.wUDelFin=!1,console.log(e)}))}))},addResults:addResults=function(e){this.dbHandler.outs.bulkAdd(e),this.removeAboveLimit()}};