const bSummary={categories:[{id:"sources",icon:"",name:{"en-us":"Sources","es-mx":"Fuentes"},desc:{"en-us":"Sources generate the signals to feed to the model.","es-mx":"Las fuentes generan las señales para alimentar al modelo."}},{id:"sinks",icon:"",name:{"en-us":"Sinks","es-mx":"Fregaderos"},desc:{"en-us":"Sinks output the information. They can be graphs or file download","es-mx":"Los sumideros generan la información. Pueden ser gráficos o descarga de archivos"}},{id:"basics",icon:"",name:{"en-us":"Basic operations","es-mx":"Operaciones básicas"},desc:{"en-us":"Basic mathematical operations are given","es-mx":"Se dan operaciones matematicas basicas"}},{id:"logics",icon:"",name:{"en-us":"Logical operations","es-mx":"Operaciones lógicas"},desc:{"en-us":"Logical operations are available in this section","es-mx":"Las operaciones lógicas están disponibles en esta sección."}},{id:"continuous",icon:"",name:{"en-us":"Continuous time","es-mx":"Tiempo continuo"},desc:{"en-us":"Dynamic operations are available here for continuous time operations","es-mx":"Las operaciones dinámicas están disponibles aquí para operaciones de tiempo continuo"}},{id:"discrete",icon:"",name:{"en-us":"Discrete time","es-mx":"Tiempo discreto"},desc:{"en-us":"Dynamic operations are available here for discrete time operations","es-mx":"Las operaciones dinámicas están disponibles aquí para operaciones de tiempo discreto"}},{id:"hardware",icon:"",name:{"en-us":"Hardware tools","es-mx":"Herramientas de hardware"},desc:{"en-us":"Hardware i/o blocks are available here","es-mx":"Los bloques de E / S de hardware están disponibles aquí"}}],blocks:{umk_1585601356516:{icon:"<line x1='20' y1='50' x2='80' y2='50' /><line x1='50' y1='20' x2='50' y2='80'/>",bg:"#1595C8",fg:"#ffffff",width:50,height:50,keywords:"sum add addition summation sumar aggregar plus",category:["basics","hardware"],name:{"en-us":"Sum","es-mx":"Suma"},desc:{"en-us":"Adds two number, vectors, or matrices.","es-mx":"Agrega dos números, vectores o matrices."}},umk_1586108946421:{icon:"<text x='50' y='57' dominant-baseline='middle' text-anchor='middle' font-size='5em'>C</text>",bg:"#1595C8",fg:"#ffffff",width:50,height:50,keywords:"constant",category:["sources"],name:{"en-us":"Constant","es-mx":"Constante"},desc:{"en-us":"A constant of scalar, vector or a matrix","es-mx":"Una constante de escalar, vector o una matriz"}}},getBlocksForCategories:function(){let e={};this.getCategoriesIdList();for(let s=0;s<Object.keys(this.blocks).length;s++){let t=Object.keys(this.blocks)[s],i=this.blocks[t].category;for(let s=0;s<i.length;s++)void 0===e[i[s]]&&(e[i[s]]=[]),e[i[s]].push(t)}return e},getCategoriesIdList:function(){let e=[];for(let s=0;s<this.categories.length;s++)e.push(this.categories[s].id);return e}},umk_1585601356516=function(e={}){this.Parameters={},this.Label=function(){},this.Icon=function(){return{html:"$+$",inLabels:new Array(this.TerminalsIn.value).fill("+"),outLabels:null,splStyle:"shape=triangle;"}},this.Init=function(){},this.End=function(){},this.Constructor=function(){},this.Destructor=function(){},this.RunTimeExec=function(){},this.Evaluate=function(){this.outputs[0]=math.add(this.inputs[0],this.inputs[1]);for(let e=2;e<this.TerminalsIn.value;e++)this.outputs[0]=math.add(this.outputs[0],this.inputs[e])},this.Details=function(){return"$$y(t) = \\sum_{i=1}^{"+this.TerminalsIn.value+"}{u_i(t)}$$"},this.ValidateParams=function(){return"OK"},this.id="umk_1585601356516",this.Colors={},this.TerminalsIn={min:2,max:100,value:2,editable:!0},this.TerminalsOut={min:1,max:1,value:1,editable:!1};for(let s in e)"function"!=typeof e[s]&&(this[s]=JSON.parse2(JSON.stringify2(e[s])))},umk_1586108946421=function(e={}){this.Parameters={constant:{Name:{"en-us":"Constant $(C)$","es-mx":"Constante $(C)$"},Dimension:"Matrix",Type:"Complex",Value:[[1]]}},this.Label=function(){},this.Icon=function(){return{html:TeXTools.makeMatrix(this.Parameters.constant.Value),inLabels:null,outLabels:null,splStyle:""}},this.Init=function(){},this.End=function(){},this.Constructor=function(){},this.Destructor=function(){},this.RunTimeExec=function(){},this.Evaluate=function(){this.outputs[0]=math.add(this.inputs[0],this.inputs[1]);for(let e=2;e<this.TerminalsIn.value;e++)this.outputs[0]=math.add(this.outputs[0],this.inputs[e])},this.Details=function(){return"$$y(t) = \\sum_{i=1}^{"+this.TerminalsIn.value+"}{u_i(t)}$$"},this.ValidateParams=function(){return"OK"},this.id="umk_1586108946421",this.Colors={},this.TerminalsIn={editable:!1,max:0,min:0,value:0},this.TerminalsOut={editable:!1,max:1,min:1,value:1};for(let s in e)"function"!=typeof e[s]&&(this[s]=JSON.parse2(JSON.stringify2(e[s])))};