var tempModel;importScripts("lib.min.js"),importScripts("dependencies/mathjs/math.min.js"),importScripts("dependencies/augmented-json-serialization-functions.js"),onmessage=function(e){if("object"==typeof e.data){let t=Object.keys(e.data);for(let s=0;s<t.length;s++)switch(t[s]){case"cells":exec.setCells(e.data.cells);break;case"updateCell":exec.updCell(e.data.updateCell.v,e.data.updateCell.i);break;case"simSettings":exec.setSimSettings(e.data.simSettings)}}else exec.start()};const exec={cells:[],simSettings:{h:5e3,T:5,realtime:!1,steps:1},setSimSettings:function(e){this.simSettings.h=e.h,this.simSettings.T=e.T,this.simSettings.realtime=e.realtime,this.simSettings.steps=e.steps},setParams:function(e){try{if(e.Parameters){let t=Object.keys(e.Parameters);for(let s=0;s<t.length;s++)"Complex"!==e.Parameters[t[s]].Type&&"real"!==e.Parameters[t[s]].Type&&"Integer"!==e.Parameters[t[s]].Type||(e.Parameters[t[s]].Value=math.evaluate(e.Parameters[t[s]].Value))}}catch(e){console.log(e)}},setCells:function(vals){console.log(vals),this.cells=vals.map(ele=>(eval("var tempModel = new "+ele.id+"(ele);"),this.setParams(tempModel),tempModel))},prepareVariableLinks:function(){let e=this.cells;e.forEach(function(e){e.inputs=new Array(e.TerminalsIn.value),e.outputs=new Array(e.TerminalsOut.value||1),displayOut.push(e.outputs)});for(var t=0;t<recEM.length;t++)for(var s=0;s<recEM[t].s.length;s++)e[t].inputs[s]=e[recEM[t].s[s][0]].outputs[recEM[t].s[s][1]]},updCell:function(value,index){eval("var tempModel = new "+value.id+"(value);"),this.setParams(tempModel),this.cells[index]=tempModel},start:function(){setInterval(function(){console.log(exec)},exec.simSettings.h)},timerHandler:null,simFunc:null,isRunning:!1,reset:function(){timerHandler&&clearInterval(this.timerHandler),this.simFunc&&(this.timerHandler=setInterval(this.simFunc,this.simSettings.h),this.isRunning=!0)},pause:function(){timerHandler&&clearInterval(this.timerHandler)}};